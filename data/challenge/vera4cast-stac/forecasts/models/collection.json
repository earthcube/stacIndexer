{
  "id": "models",
  "description": "Forecasts are the raw forecasts that includes all ensemble members or distribution parameters. Due to the size of the raw forecasts, we recommend accessing the scores (summaries of the forecasts) to analyze forecasts (unless you need the individual ensemble members). You can access the forecasts at the top level of the dataset where all models, variables, and dates that forecasts were produced (reference_datetime) are available. The code to access the entire dataset is provided as an asset. Given the size of the forecast catalog, it can be time-consuming to access the data at the full dataset level. For quicker access to the forecasts for a particular model (model_id), we also provide the code to access the data at the model_id level as an asset for each model.",
  "stac_version": "1.0.0",
  "license": "CC0-1.0",
  "stac_extensions": [
    "https://stac-extensions.github.io/scientific/v1.0.0/schema.json",
    "https://stac-extensions.github.io/item-assets/v1.0.0/schema.json",
    "https://stac-extensions.github.io/table/v1.2.0/schema.json"
  ],
  "type": "Collection",
  "sci:doi": "https://doi.org/10.1002/fee.2616",
  "links": [
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/cfs.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/climatology.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/gem_global.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/gfs_seamless.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/icon_seamless.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/ecmwf_ifs04.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/fableARIMA.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/fableETS.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/fableNNETAR.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/glm_aed_v1.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/inflow_gefsClimAED.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/persistenceRW.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/TESTclimatology.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/example_forecast.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/TempC_mean_example_forecast.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/climatology2.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/persistenceFO.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/Flow_cms_mean.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/Temp_C_mean.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/historic_mean.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/monthly_mean.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/flareSimstrat.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/flareGOTM.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/asl.auto.arima.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/asl.ets.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/asl.tbats.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/example_ID.json"
    },
    {
      "rel": "item",
      "type": "application/json",
      "href": "model_items/secchi_example_forecast.json"
    },
    {
      "rel": "parent",
      "type": "application/json",
      "href": "../collection.json"
    },
    {
      "rel": "root",
      "type": "application/json",
      "href": "../collection.json"
    },
    {
      "rel": "self",
      "type": "application/json",
      "href": "collection.json"
    },
    {
      "rel": "cite-as",
      "href": "http://example.com/broke"
    },
    {
      "rel": "about",
      "href": "https://www.ltreb-reservoirs.org/vera4cast/",
      "type": "text/html",
      "title": "VERA Forecasting Challenge Documentation"
    },
    {
      "rel": "describedby",
      "href": "https://www.ltreb-reservoirs.org/vera4cast",
      "title": "VERA Forecast Challenge Dashboard",
      "type": "text/html"
    }
  ],
  "title": "Models",
  "extent": {
    "spatial": {
      "bbox": [
        [-79.8372, 37.3032, -79.8159, 37.3129]
      ]
    },
    "temporal": {
      "interval": [
        [
          "2023-09-21T00:00:00Z",
          "2024-05-30T00:00:00Z"
        ]
      ]
    }
  },
  "table:columns": [
    {
      "name": "site_id",
      "type": "string",
      "description": "For forecasts that are not on a spatial grid, use of a site dimension that maps to a more detailed geometry (points, polygons, etc.) is allowable. In general this would be documented in the external metadata (e.g., alook-up table that provides lon and lat)"
    },
    {
      "name": "reference_datetime",
      "type": "timestamp[us, tz=UTC]",
      "description": "datetime that the forecast was initiated (horizon = 0)"
    },
    {
      "name": "datetime",
      "type": "timestamp[us, tz=UTC]",
      "description": "datetime of the forecasted value (ISO 8601)"
    },
    {
      "name": "depth_m",
      "type": "double",
      "description": "depth (meters) in water column of prediction"
    },
    {
      "name": "family",
      "type": "string",
      "description": "For ensembles: `ensemble.` Default value if unspecified for probability distributions: Name of the statistical distribution associated with the reported statistics. The `sample` distribution is synonymous with `ensemble.`For summary statistics: `summary.`"
    },
    {
      "name": "parameter",
      "type": "string",
      "description": "ensemble member or distribution parameter"
    },
    {
      "name": "prediction",
      "type": "double",
      "description": "predicted value for variable"
    },
    {
      "name": "pub_datetime",
      "type": "timestamp[us, tz=UTC]",
      "description": "datetime that forecast was submitted"
    },
    {
      "name": "project_id",
      "type": "string",
      "description": "unique identifier for the forecast project"
    },
    {
      "name": "duration",
      "type": "string",
      "description": "temporal duration of forecast (hourly, daily, etc.); follows ISO 8601 duration convention"
    },
    {
      "name": "variable",
      "type": "string",
      "description": "name of forecasted variable"
    },
    {
      "name": "model_id",
      "type": "string",
      "description": "unique model identifier"
    },
    {
      "name": "reference_date",
      "type": "string",
      "description": "date that the forecast was initiated"
    }
  ],
  "assets": {
    "data": {
      "href": "s3://anonymous@?endpoint_override=renc.osn.xsede.org",
      "type": "application/x-parquet",
      "title": "Database Access",
      "roles": [
        "data"
      ],
      "description": "Use `arrow` for remote access to the database. This R code will return results for forecasts of the variable by the specific model .\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(\"s3://anonymous@?endpoint_override=renc.osn.xsede.org\")\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n"
    },
    "thumbnail": {
      "href": "pending",
      "type": "image/JPEG",
      "roles": [
        "thumbnail"
      ],
      "title": "pending"
    }
  }
}
