{
    "stac_version": "1.0.0",
    "stac_extensions": [
        "https://stac-extensions.github.io/table/v1.2.0/schema.json"
    ],
    "type": "Feature",
    "id": "glm_aed_flare_v3_Secchi_m_sample_P1D_summaries",
    "bbox": [
        -79.8372,
        37.3032,
        -79.8372,
        37.3032
    ],
    "geometry": {
        "type": "MultiPoint",
        "coordinates": [
            [
                -79.8372,
                37.3032
            ]
        ]
    },
    "properties": {
        "title": "glm_aed_flare_v3",
        "description": "General Lake Model with Aquatic Ecosystem Dynamics (GLM-AED) library within FLAREr version 3.0.  GLM-AED is a 1-D hydrodynamic model and FLARE adds EnKF-based data assimilation.  Temperature, oxygen, fdom, chla, and secchi depth are assimilated.",
        "datetime": "2025-03-28",
        "updated": "2025-03-29 06:29:20",
        "start_datetime": "2024-09-25T00:00:00Z",
        "end_datetime": "2025-05-01T00:00:00Z",
        "providers": [
            {
                "url": "https://projects.ecoforecast.org/neon4cast-ci/",
                "name": "NEON Ecological Forecasting Project",
                "roles": [
                    "producer",
                    "processor",
                    "licensor"
                ]
            },
            {
                "url": "http://ecoforecast.centers.vt.edu/",
                "name": "Virginia Tech Center for Ecosystem Forecasting",
                "roles": [
                    "host"
                ]
            }
        ],
        "license": "CC0-1.0",
        "keywords": [
            "Summaries",
            "vera4cast",
            "Physical",
            "glm_aed_flare_v3",
            "Secchi",
            "Secchi_m_sample",
            "Daily",
            "P1D",
            "fcre",
            "process based"
        ],
        "table:columns": [
            {
                "name": "reference_datetime",
                "type": "timestamp[us, tz=UTC]",
                "description": "datetime that the forecast was initiated (horizon = 0)"
            },
            {
                "name": "site_id",
                "type": "string",
                "description": "For forecasts that are not on a spatial grid, use of a site dimension that maps to a more detailed geometry (points, polygons, etc.) is allowable. In general this would be documented in the external metadata (e.g., alook-up table that provides lon and lat)"
            },
            {
                "name": "datetime",
                "type": "timestamp[us, tz=UTC]",
                "description": "datetime of the forecasted value (ISO 8601)"
            },
            {
                "name": "family",
                "type": "string",
                "description": "For ensembles: \u201censemble.\u201d Default value if unspecified for probability distributions: Name of the statistical distribution associated with the reported statistics. The \u201csample\u201d distribution is synonymous with \u201censemble.\u201dFor summary statistics: \u201csummary.\u201d"
            },
            {
                "name": "pub_datetime",
                "type": "timestamp[us, tz=UTC]",
                "description": "datetime that forecast was submitted"
            },
            {
                "name": "depth_m",
                "type": "double",
                "description": "depth (meters) in water column of prediction"
            },
            {
                "name": "mean",
                "type": "double",
                "description": "mean forecast prediction"
            },
            {
                "name": "median",
                "type": "double",
                "description": "median forecast prediction"
            },
            {
                "name": "sd",
                "type": "double",
                "description": "standard deviation forecasts"
            },
            {
                "name": "quantile97.5",
                "type": "double",
                "description": "upper 97.5 percentile value of forecast"
            },
            {
                "name": "quantile02.5",
                "type": "double",
                "description": "upper 2.5 percentile value of forecast"
            },
            {
                "name": "quantile90",
                "type": "double",
                "description": "upper 90 percentile value of forecast"
            },
            {
                "name": "quantile10",
                "type": "double",
                "description": "upper 10 percentile value of forecast"
            },
            {
                "name": "project_id",
                "type": "string",
                "description": "unique identifier for the forecast project"
            },
            {
                "name": "reference_date",
                "type": "date32[day]",
                "description": "date that the forecast was initiated"
            },
            {
                "name": "duration",
                "type": "string",
                "description": "temporal duration of forecast (hourly, daily, etc.); follows ISO 8601 duration convention"
            },
            {
                "name": "variable",
                "type": "string",
                "description": "name of forecasted variable"
            }
        ]
    },
    "collection": "summaries",
    "links": [
        {
            "rel": "collection",
            "href": "../collection.json",
            "type": "application/json",
            "title": "glm_aed_flare_v3"
        },
        {
            "rel": "root",
            "href": "../../../catalog.json",
            "type": "application/json",
            "title": "Forecast Catalog"
        },
        {
            "rel": "parent",
            "href": "../collection.json",
            "type": "application/json",
            "title": "glm_aed_flare_v3"
        },
        {
            "rel": "self",
            "href": "glm_aed_flare_v3.json",
            "type": "application/json",
            "title": "Model Forecast"
        },
        {
            "rel": "item",
            "href": "https://github.com/FLARE-forecast/FCRE-forecast-code/blob/main/workflows/glm_aed_flare_v3/combined_run_aed.R",
            "type": "text/html",
            "title": "Link for Model Code"
        },
        {
            "rel": "item",
            "href": "https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/LTREB-reservoirs/vera4cast/main/catalog/summaries/Physical/Daily_Secchi/models/glm_aed_flare_v3.json",
            "type": "text/html",
            "title": "Link for rendered STAC item"
        },
        {
            "rel": "item",
            "href": "https://raw.githubusercontent.com/LTREB-reservoirs/vera4cast/main/catalog/summaries/Physical/Daily_Secchi/models/glm_aed_flare_v3.json",
            "type": "text/html",
            "title": "Link for raw JSON file"
        }
    ],
    "assets": {
        "1": {
            "type": "application/json",
            "title": "Model Metadata",
            "href": "https://renc.osn.xsede.org/bio230121-bucket01/vera4cast/metadata/model_id/glm_aed_flare_v3.json",
            "description": "Use `jsonlite::fromJSON()` to download the model metadata JSON file. This R code will return metadata provided during the model registration.\n      \n\n### R\n\n```{r}\n# Use code below\n\nmodel_metadata <- jsonlite::fromJSON(\"https://renc.osn.xsede.org/bio230121-bucket01/vera4cast/metadata/model_id/glm_aed_flare_v3.json\")\n\n"
        },
        "2": {
            "type": "text/html",
            "title": "Link for Model Code",
            "href": "https://github.com/FLARE-forecast/FCRE-forecast-code/blob/main/workflows/glm_aed_flare_v3/combined_run_aed.R",
            "description": "The link to the model code provided by the model submission team"
        },
        "3": {
            "type": "application/x-parquet",
            "title": "Database Access for Daily Secchi",
            "href": "s3://anonymous@bio230121-bucket01/vera4cast/forecasts/bundled-summaries/project_id=vera4cast/duration=P1D/variable=Secchi_m_sample/model_id=glm_aed_flare_v3?endpoint_override=renc.osn.xsede.org",
            "description": "Use `R` or `Python` code for remote access to the database. This code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(\"s3://anonymous@bio230121-bucket01/vera4cast/forecasts/bundled-summaries/project_id=vera4cast/duration=P1D/variable=Secchi_m_sample/model_id=glm_aed_flare_v3?endpoint_override=renc.osn.xsede.org\")\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n### Python\n\n```{python}# Use code below\nimport ibis\ncon = ibis.duckdbf.connect()\ncon.raw_sql(f'''\nCREATE OR REPLACE SECRET secret (\nTYPE S3,\nENDPOINT 'renc.osn.xsede.org',\nURL_STYLE 'path'\n\n''');\npath = \"s3://bio230121-bucket01/vera4cast/forecasts/bundled-summaries/project_id=vera4cast/duration=P1D/variable=Secchi_m_sample/model_id=glm_aed_flare_v3\"\ncon.read_parquet(path + \"/**\")"
        }
    }
}