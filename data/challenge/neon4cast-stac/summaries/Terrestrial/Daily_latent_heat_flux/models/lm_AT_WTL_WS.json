{
  "stac_version": "1.0.0",
  "stac_extensions": [
    "https://stac-extensions.github.io/table/v1.2.0/schema.json"
  ],
  "type": "Feature",
  "id": "lm_AT_WTL_WS_le_P1D_summaries",
  "bbox": [
    ["Inf", "Inf", "-Inf", "-Inf"]
  ],
  "geometry": {
    "type": "MultiPoint",
    "coordinates": []
  },
  "properties": {
    "title": "lm_AT_WTL_WS",
    "description": "This page includes summaries for the Daily_latent_heat_flux variable for the lm_AT_WTL_WS model. Information for the model is provided as follows: This forecast of water temperature at NEON Lake sites uses a linear model, incorporating air temperature, wind speed, and the previous day's forecasted water temperature as variables..\n                                    The model predicts this variable at the following sites: .\n                                    Summaries are the forecasts statistics of the raw forecasts (i.e., mean, median, confidence intervals). We provide the code to access the scores data as an asset",
    "start_datetime": "Inf",
    "end_datetime": "-Inf",
    "providers": [
      {
        "url": "pending",
        "name": "pending",
        "roles": [
          "producer",
          "processor",
          "licensor"
        ]
      },
      {
        "url": "https://www.ecoforecastprojectvt.org",
        "name": "Ecoforecast Challenge",
        "roles": [
          "host"
        ]
      }
    ],
    "license": "CC0-1.0",
    "keywords": [
      "Summaries",
      "neon4cast",
      "Terrestrial",
      "lm_AT_WTL_WS",
      "latent_heat_flux",
      "Daily"
    ],
    "table:columns": [
      {
        "name": "17 columns",
        "type": null,
        "description": {}
      },
      {
        "name": "reference_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that the forecast was initiated (horizon = 0)"
      },
      {
        "name": "site_id",
        "type": "string",
        "description": "For forecasts that are not on a spatial grid, use of a site dimension that maps to a more detailed geometry (points, polygons, etc.) is allowable. In general this would be documented in the external metadata (e.g., alook-up table that provides lon and lat)"
      },
      {
        "name": "datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime of the forecasted value (ISO 8601)"
      },
      {
        "name": "family",
        "type": "string",
        "description": "For ensembles: “ensemble.” Default value if unspecified for probability distributions: Name of the statistical distribution associated with the reported statistics. The “sample” distribution is synonymous with “ensemble.”For summary statistics: “summary.”"
      },
      {
        "name": "pub_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that forecast was submitted"
      },
      {
        "name": "mean",
        "type": "double",
        "description": "mean forecast prediction"
      },
      {
        "name": "median",
        "type": "double",
        "description": "median forecast prediction"
      },
      {
        "name": "sd",
        "type": "double",
        "description": "standard deviation forecasts"
      },
      {
        "name": "quantile97.5",
        "type": "double",
        "description": "upper 97.5 percentile value of forecast"
      },
      {
        "name": "quantile02.5",
        "type": "double",
        "description": "upper 2.5 percentile value of forecast"
      },
      {
        "name": "quantile90",
        "type": "double",
        "description": "upper 90 percentile value of forecast"
      },
      {
        "name": "quantile10",
        "type": "double",
        "description": "upper 10 percentile value of forecast"
      },
      {
        "name": "project_id",
        "type": "string",
        "description": "unique identifier for the forecast project"
      },
      {
        "name": "duration",
        "type": "string",
        "description": "temporal duration of forecast (hourly, daily, etc.); follows ISO 8601 duration convention"
      },
      {
        "name": "variable",
        "type": "string",
        "description": "name of forecasted variable"
      },
      {
        "name": "model_id",
        "type": "string",
        "description": "unique model identifier"
      }
    ]
  },
  "collection": "summaries",
  "links": [
    {
      "rel": "collection",
      "href": "../collection.json",
      "type": "application/json",
      "title": "lm_AT_WTL_WS"
    },
    {
      "rel": "root",
      "href": "../../../catalog.json",
      "type": "application/json",
      "title": "Forecast Catalog"
    },
    {
      "rel": "parent",
      "href": "../collection.json",
      "type": "application/json",
      "title": "lm_AT_WTL_WS"
    },
    {
      "rel": "self",
      "href": "lm_AT_WTL_WS.json",
      "type": "application/json",
      "title": "Model Forecast"
    },
    {
      "rel": "item",
      "href": "https://github.com/cvickery123/NEON-forecast-challenge-workshop/blob/821f7af9bc83951722bb5bcecbd601c62cbe66e0/Submit_forecast/forecast_project1.Rmd",
      "type": "text/html",
      "title": "Link for Model Code"
    }
  ],
  "assets": {
    "1": {
      "type": "application/json",
      "title": "Model Metadata",
      "href": "https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/lm_AT_WTL_WS.json",
      "description": "Use `jsonlite::fromJSON()` to download the model metadata JSON file. This R code will return metadata provided during the model registration.\n      \n\n### R\n\n```{r}\n# Use code below\n\nmodel_metadata <- jsonlite::fromJSON(\"https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/lm_AT_WTL_WS.json\")\n\n"
    },
    "2": {
      "type": "text/html",
      "title": "Link for Model Code",
      "href": "https://github.com/cvickery123/NEON-forecast-challenge-workshop/blob/821f7af9bc83951722bb5bcecbd601c62cbe66e0/Submit_forecast/forecast_project1.Rmd",
      "description": "The link to the model code provided by the model submission team"
    },
    "3": {
      "type": "application/x-parquet",
      "title": "Database Access for NA",
      "href": "s3://anonymous@project_id=NA/duration=NA/variable=NA/model_id=lm_AT_WTL_WS?endpoint_override=sdsc.osn.xsede.org",
      "description": "Use `arrow` for remote access to the database. This R code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(\"s3://anonymous@project_id=NA/duration=NA/variable=NA/model_id=lm_AT_WTL_WS?endpoint_override=sdsc.osn.xsede.org\")\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n"
    },
    "4": {
      "type": "application/x-parquet",
      "title": "Database Access for ",
      "href": "s3://anonymous@project_id=/duration=/variable=/model_id=lm_AT_WTL_WS?endpoint_override=sdsc.osn.xsede.org",
      "description": "Use `arrow` for remote access to the database. This R code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(\"s3://anonymous@project_id=/duration=/variable=/model_id=lm_AT_WTL_WS?endpoint_override=sdsc.osn.xsede.org\")\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n"
    }
  }
}
