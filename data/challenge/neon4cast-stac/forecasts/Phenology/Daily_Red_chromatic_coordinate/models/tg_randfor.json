{
    "stac_version": "1.0.0",
    "stac_extensions": [
        "https://stac-extensions.github.io/table/v1.2.0/schema.json"
    ],
    "type": "Feature",
    "id": "tg_randfor_rcc_90_P1D_forecast",
    "bbox": [
        -156.6194,
        17.9696,
        -66.8687,
        71.2824
    ],
    "geometry": {
        "type": "MultiPoint",
        "coordinates": [
            [
                -145.7514,
                63.8811
            ],
            [
                -89.5864,
                45.5089
            ],
            [
                -78.1395,
                38.8929
            ],
            [
                -96.5631,
                39.1008
            ],
            [
                -110.5391,
                44.9535
            ],
            [
                -97.57,
                33.4012
            ],
            [
                -147.5026,
                65.154
            ],
            [
                -103.0293,
                40.4619
            ],
            [
                -99.0588,
                35.4106
            ],
            [
                -106.8425,
                32.5907
            ],
            [
                -99.1066,
                47.1617
            ],
            [
                -95.1921,
                39.0404
            ],
            [
                -72.1727,
                42.5369
            ],
            [
                -76.56,
                38.8901
            ],
            [
                -119.7323,
                37.1088
            ],
            [
                -66.8687,
                17.9696
            ],
            [
                -81.4362,
                28.1251
            ],
            [
                -109.3883,
                38.2483
            ],
            [
                -99.2413,
                47.1282
            ],
            [
                -155.3173,
                19.5531
            ],
            [
                -78.0418,
                39.0337
            ],
            [
                -67.0769,
                18.0213
            ],
            [
                -71.2874,
                44.0639
            ],
            [
                -104.7456,
                40.8155
            ],
            [
                -110.8355,
                31.9107
            ],
            [
                -81.9934,
                29.6893
            ],
            [
                -112.4524,
                40.1776
            ],
            [
                -105.546,
                40.2759
            ],
            [
                -149.3705,
                68.6611
            ],
            [
                -87.8039,
                32.5417
            ],
            [
                -149.2133,
                63.8758
            ],
            [
                -84.4686,
                31.1948
            ],
            [
                -156.6194,
                71.2824
            ],
            [
                -96.6129,
                39.1104
            ],
            [
                -89.5373,
                46.2339
            ],
            [
                -87.3933,
                32.9505
            ],
            [
                -88.1612,
                31.8539
            ],
            [
                -84.2826,
                35.9641
            ],
            [
                -119.006,
                37.0058
            ],
            [
                -122.3303,
                45.7624
            ],
            [
                -100.9154,
                46.7697
            ],
            [
                -119.2622,
                37.0334
            ],
            [
                -83.5019,
                35.689
            ],
            [
                -105.5824,
                40.0543
            ],
            [
                -89.5857,
                45.4937
            ],
            [
                -80.5248,
                37.3783
            ],
            [
                -121.9519,
                45.8205
            ]
        ]
    },
    "properties": {
        "title": "tg_randfor",
        "description": "All forecasts for the Daily_Red_chromatic_coordinate variable for the tg_randfor model. Information for the model is provided as follows: Random Forest is a machine learning model that is fitted with the ranger() function in the ranger\nR package (Wright & Ziegler 2017) within the tidymodels framework (Kuhn & Wickham 2020). The\nmodel drivers are unlagged air temperature, air pressure, relative humidity, surface downwelling\nlongwave and shortwave radiation, precipitation, and northward and eastward wind.\n                                    The model predicts this variable at the following sites: DEJU, STEI, SCBI, KONZ, YELL, CLBJ, BONA, STER, OAES, JORN, DCFS, UKFS, HARV, SERC, SJER, GUAN, DSNY, MOAB, WOOD, PUUM, BLAN, LAJA, BART, CPER, SRER, OSBS, ONAQ, RMNP, TOOL, DELA, HEAL, JERC, BARR, KONA, UNDE, TALL, LENO, ORNL, TEAK, ABBY, NOGP, SOAP, GRSM, NIWO, TREE, MLBS, WREF.\n                                    Forecasts are the raw forecasts that includes all ensemble members or distribution parameters. Due to the size of the raw forecasts, we recommend accessing the forecast summaries or scores to analyze forecasts (unless you need the individual ensemble members)",
        "datetime": "2024-08-16",
        "updated": "2024-08-29 17:14:00",
        "start_datetime": "2023-01-01T00:00:00Z",
        "end_datetime": "2024-09-18T00:00:00Z",
        "providers": [
            {
                "url": "https://projects.ecoforecast.org/neon4cast-ci/",
                "name": "NEON Ecological Forecasting Project",
                "roles": [
                    "producer",
                    "processor",
                    "licensor"
                ]
            },
            {
                "url": "www.neon4cast.org",
                "name": "Ecoforecast Challenge",
                "roles": [
                    "host"
                ]
            }
        ],
        "license": "CC0-1.0",
        "keywords": [
            "Forecasts",
            "neon4cast",
            "Phenology",
            "tg_randfor",
            "Red_chromatic_coordinate",
            "rcc_90",
            "Daily",
            "P1D",
            "DEJU",
            "STEI",
            "SCBI",
            "KONZ",
            "YELL",
            "CLBJ",
            "BONA",
            "STER",
            "OAES",
            "JORN",
            "DCFS",
            "UKFS",
            "HARV",
            "SERC",
            "SJER",
            "GUAN",
            "DSNY",
            "MOAB",
            "WOOD",
            "PUUM",
            "BLAN",
            "LAJA",
            "BART",
            "CPER",
            "SRER",
            "OSBS",
            "ONAQ",
            "RMNP",
            "TOOL",
            "DELA",
            "HEAL",
            "JERC",
            "BARR",
            "KONA",
            "UNDE",
            "TALL",
            "LENO",
            "ORNL",
            "TEAK",
            "ABBY",
            "NOGP",
            "SOAP",
            "GRSM",
            "NIWO",
            "TREE",
            "MLBS",
            "WREF"
        ],
        "table:columns": [
            {
                "name": "datetime",
                "type": "timestamp[us, tz=UTC]",
                "description": "datetime of the forecasted value (ISO 8601)"
            },
            {
                "name": "site_id",
                "type": "string",
                "description": "For forecasts that are not on a spatial grid, use of a site dimension that maps to a more detailed geometry (points, polygons, etc.) is allowable. In general this would be documented in the external metadata (e.g., alook-up table that provides lon and lat)"
            },
            {
                "name": "prediction",
                "type": "double",
                "description": "predicted value for variable"
            },
            {
                "name": "parameter",
                "type": "string",
                "description": "ensemble member or distribution parameter"
            },
            {
                "name": "family",
                "type": "string",
                "description": "For ensembles: \u201censemble.\u201d Default value if unspecified for probability distributions: Name of the statistical distribution associated with the reported statistics. The \u201csample\u201d distribution is synonymous with \u201censemble.\u201dFor summary statistics: \u201csummary.\u201d"
            },
            {
                "name": "reference_datetime",
                "type": "timestamp[us, tz=UTC]",
                "description": "datetime that the forecast was initiated (horizon = 0)"
            },
            {
                "name": "pub_datetime",
                "type": "timestamp[us, tz=UTC]",
                "description": "datetime that forecast was submitted"
            },
            {
                "name": "duration",
                "type": "string",
                "description": "temporal duration of forecast (hourly, daily, etc.); follows ISO 8601 duration convention"
            },
            {
                "name": "model_id",
                "type": "string",
                "description": "unique model identifier"
            },
            {
                "name": "project_id",
                "type": "string",
                "description": "unique identifier for the forecast project"
            }
        ]
    },
    "collection": "forecasts",
    "links": [
        {
            "rel": "collection",
            "href": "../collection.json",
            "type": "application/json",
            "title": "tg_randfor"
        },
        {
            "rel": "root",
            "href": "../../../catalog.json",
            "type": "application/json",
            "title": "Forecast Catalog"
        },
        {
            "rel": "parent",
            "href": "../collection.json",
            "type": "application/json",
            "title": "tg_randfor"
        },
        {
            "rel": "self",
            "href": "tg_randfor.json",
            "type": "application/json",
            "title": "Model Forecast"
        },
        {
            "rel": "item",
            "href": "https://github.com/eco4cast/Forecast_submissions/blob/main/Generate_forecasts/tg_randfor/train",
            "type": "text/html",
            "title": "Link for Model Code"
        },
        {
            "rel": "item",
            "href": "https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-ci/main/catalog/forecasts/Phenology/Daily_Red_chromatic_coordinate/models/tg_randfor.json",
            "type": "text/html",
            "title": "Link for rendered STAC item"
        },
        {
            "rel": "item",
            "href": "https://raw.githubusercontent.com/eco4cast/neon4cast-ci/main/catalog/forecasts/Phenology/Daily_Red_chromatic_coordinate/models/tg_randfor.json",
            "type": "text/html",
            "title": "Link for raw JSON file"
        }
    ],
    "assets": {
        "1": {
            "type": "application/json",
            "title": "Model Metadata",
            "href": "https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/tg_randfor.json",
            "description": "Use `jsonlite::fromJSON()` to download the model metadata JSON file. This R code will return metadata provided during the model registration.\n      \n\n### R\n\n```{r}\n# Use code below\n\nmodel_metadata <- jsonlite::fromJSON(\"https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/tg_randfor.json\")\n\n"
        },
        "2": {
            "type": "text/html",
            "title": "Link for Model Code",
            "href": "https://github.com/eco4cast/Forecast_submissions/blob/main/Generate_forecasts/tg_randfor/train",
            "description": "The link to the model code provided by the model submission team"
        },
        "3": {
            "type": "application/x-parquet",
            "title": "Database Access for Daily Red_chromatic_coordinate",
            "href": "s3://anonymous@bio230014-bucket01/challenges/forecasts/bundled-parquet//project_id=neon4cast/duration=P1D/variable=rcc_90/model_id=tg_randfor?endpoint_override=sdsc.osn.xsede.org",
            "description": "Use `R` or `Python` code for remote access to the database. This code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(\"s3://anonymous@bio230014-bucket01/challenges/forecasts/bundled-parquet//project_id=neon4cast/duration=P1D/variable=rcc_90/model_id=tg_randfor?endpoint_override=sdsc.osn.xsede.org\")\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n### Python\n\n```# Use code below\n\n\nimport ibis\n\n       con = ibis.duckdbf.connect()\n\n\n       con.raw_sql(f'''\n\n       CREATE OR REPLACE SECRET secret (\n\n       TYPE S3,\n\n       ENDPOINT 'sdsc.osn.xsede.org',\n\n       URL_STYLE 'path'\n\n\n       ''');\n       \n\n\n       path = \"s3://bio230014-bucket01/challenges/forecasts/bundled-parquet//project_id=neon4cast/duration=P1D/variable=rcc_90/model_id=tg_randfor\"\ncon.read_parquet(path + \"/**\")"
        }
    }
}