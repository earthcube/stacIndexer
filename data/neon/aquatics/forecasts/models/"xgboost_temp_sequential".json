{
  "description": [
    {
      "model.description": "Machine learning approach using an XGBoost structure that utilizes day-of-year and forecasted air temperature in generating forecasts. Uses the R XGBoost library, and uses predicted water temperature as a model input for oxygen and chlorophyll (referenced by the sequential in the name)."
    }
  ],
  "stac_version": "1.0.0",
  "stac_extensions": [],
  "type": "Feature",
  "id": "\"xgboost_temp_sequential\"",
  "bbox": [
    -156.6194,
    17.9696,
    -66.7987,
    71.2824
  ],
  "geometry": {
    "type": "Polygon",
    "coordinates": [
      [
        [
          -156.6194,
          17.9696
        ],
        [
          -66.7987,
          17.9696
        ],
        [
          -66.7987,
          71.2824
        ],
        [
          -156.6194,
          71.2824
        ],
        [
          -156.6194,
          17.9696
        ]
      ]
    ]
  },
  "properties": {
    "datetime": "2023-04-26T00=00=00Z"
  },
  "collection": "forecast",
  "links": [
    {
      "rel": "collection",
      "href": "../forecast.json",
      "type": "application/json",
      "title": "Aquatics Forecasts"
    },
    {
      "rel": "root",
      "href": "../../../catalog.json",
      "type": "application/json",
      "title": "EFI Forecast Catalog"
    },
    {
      "rel": "parent",
      "href": "../forecast.json",
      "type": "application/json",
      "title": "Aquatics Forecasts"
    }
  ],
  "assets": {
    "parquet_items": {
      "href": "s3://anonymous@bio230014-bucket01/neon4cast-forecasts/parquet/aquatics/model_id=\"xgboost_temp_sequential\"?endpoint_override=sdsc.osn.xsede.org",
      "type": "application/x-parquet",
      "title": "XGBoosters",
      "description": "\nUse `arrow` for remote access to the database. \n\n### R \n\n```{r}\n# Copied from \"URL for Amazon S3\" button \nurl_for_s3 <- \"s3://anonymous@neon4cast-forecasts/parquet/aquatics/model_id=cb_prophet?endpoint_override=data.ecoforecast.org\"\n\nfcst <- arrow::open_dataset(url_for_s3)\ndf <- fcst |> dplyr::collect()\n\n```\n\nNow use dplyr operations to summarise or subset (if necessary), followed by `dplyr::collect()` to bring this data into R as a `data.frame`.  \n"
    }
  },
  "license": "CC0-1.0",
  "keywords": [
    "Forecasting",
    "Temperature",
    "Oxygen",
    "NEON"
  ],
  "providers": [
    {
      "url": "greg19@vt.edu",
      "name": "Gregory Harrison",
      "roles": [
        "producer",
        "processor",
        "licensor"
      ]
    },
    {
      "url": "https://ecoforecast.org",
      "name": "Ecoforecast Challenge",
      "roles": [
        "host"
      ]
    }
  ]
}
